c
guess
c
n
display @pegs
display guess
@pegs.include?(guess[i])
guess
n
matches[matches.index(guess[i])]
matches.index(guess[i])
@pegs.include?(guess[i])
length
display i
i
n
b 57
@pegs.length
@pegs
s
n
c
@pegs
n
s
n
c
n
c
length
c
n
self.length
n
c
n
c
n
c
num_exact_matches(guess)
near_match
n
matches
@pegs
n
@pegs
c
@pegs
c
@pegs
matches
n
c
num_exact_matches(guess)
num_exact_matches
near_match
c
num_exact_matches(guess)
guess
near_match
c
exit
self.pegs
self
@pegs
c
@pegs
c
@pegs
c
@pegs
c
@pegs
c
@pegs
c
@pegs
c
n
@pegs
c
@pegs
n
@pegs
c
display @pegs
c
@pegs
c
@pegs
pegs
c
[1,2].sample
self.pegs
self
@pegs
pegs
num
c
pegs.all? {|peg| POSSIBLE_PEGS.keys.include?(peg.upcase)}
pegs
